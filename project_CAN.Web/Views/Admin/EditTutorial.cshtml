@using System.Web.Optimization

@{
    ViewBag.Title = "Edit Tutorial";
    Layout = "~/Views/Shared/_LayoutBlankPage.cshtml";
    var content = ViewBag.tutorial;
    var relativePath = Path.Combine(ViewBag.path, content.Image.imageName);
}
@model project_CAN.Web.Models.Admin.TutorialView
@Styles.Render("~/Content/css/admin/editTutorial")
<body class="editCoursesPage">

    <div class="prevCourses">
        <img src="@Url.Content(relativePath)" />
        <h2>@content.title</h2>
        <p>@content.description</p>
        @*<iframe width="420" height="315" src="https://www.youtube.com/embed/eI4an8aSsgw">
            </iframe>*@
        <iframe width="560" height="315" src="@content.Video.videoLink" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
    </div>

    <div class="editCourses">
        @using (Html.BeginForm("EditTutorial", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.tutorialId, new { @Value = content.tutorialId})
            <a href="@Url.Action("ControlTutorial", "Admin")" style="color: black;"><i class="bi bi-arrow-left-square"></i></a>

            <div class="editCoursesTitle">
                @*<input type="text" placeholder="Titlu">*@
                @Html.TextBoxFor(model => model.title, new { placeholder = "Titlu" })
                @Html.ValidationMessageFor(model => model.title)
            </div>

            <div class="editCoursesText">
                @*<textarea name="text" placeholder="Continutul"></textarea>*@
                @Html.TextAreaFor(model => model.description, new { name = "text", placeholder = "Continutul" })
                @Html.ValidationMessageFor(model => model.description)
            </div>

            <div class="editCoursesVideo">
                @*<input type="text" placeholder="Linkul Videului">*@
                @Html.TextBoxFor(model => model.videoLink, new { placeholder = "Linkul Video-ului" })
                @Html.ValidationMessageFor(model => model.videoLink)
            </div>

            <div class="editCoursesImg">
                <label for="uploadFile">Adauga o imagine:</label>
                @*<input type="file" name="uploadFile" onchange="previewImage(event)">*@
                @Html.TextBoxFor(model => model.image, new { type = "file", name = "uploadFile" })
                @Html.ValidationMessageFor(model => model.image)
            </div>

            <div class="previewImage"></div>

            <button type="submit" class="btn btn-secondary btn-lg">Salveaza</button>
        }
    </div>

    <script>
        function previewImage(event) {
            var preview = document.querySelector('.previewDbImage');
            preview.innerHTML = ''; // Clear previous preview

            var file = event.target.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    var img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.maxWidth = '100%';
                    img.style.maxHeight = '100%';
                    preview.appendChild(img);
                }
                reader.readAsDataURL(file);
            }
        }
    </script>


</body>